{"version":3,"sources":["firebase-config.js","components/TextBox/MessageBar.js","components/TextBox/TextBox.js","components/TextBox/Messages.js","components/TextBox/SignInButton.js","components/TextBox/SideBar.js","App.js","reportWebVitals.js","index.js"],"names":["app","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","getAuth","db","getFirestore","google_provider","GoogleAuthProvider","signInWithGoogle","signInWithPopup","then","result","name","user","displayName","email","profilePic","photoURL","uid","console","log","localStorage","setItem","catch","error","signOutWithGoogle","signOut","MessageBar","_useState","useState","_useState2","Object","slicedToArray","inputText","setInputText","currentUser","handleSubmit","_ref","asyncToGenerator","_regeneratorRuntime","mark","_callee","event","collectionRef","payLoad","wrap","_context","prev","next","collection","text","timestamp","serverTimestamp","getItem","preventDefault","addDoc","stop","_x","apply","this","arguments","react_default","a","createElement","className","type","value","onChange","target","placeholder","onClick","TextBox","props","position","src","profileURL","alt","Messages","messages","setMessages","useEffect","q","query","orderBy","onSnapshot","snapshot","docs","map","doc","objectSpread","data","id","message","key","components_TextBox_TextBox","SignInButton","isUserSignedIn","setIsUserSignedIn","onAuthStateChanged","fc_index_esm","SideBar","components_TextBox_SignInButton","App","isAuth","setIsAuth","components_TextBox_SideBar","components_TextBox_Messages","components_TextBox_MessageBar","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.50e04630.chunk.js","sourcesContent":["import { initializeApp } from 'firebase/app';\nimport { getFirestore } from '@firebase/firestore';\nimport { getAuth, GoogleAuthProvider, signInWithPopup, signOut } from 'firebase/auth';\n\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_API_KEY,\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n  projectId: process.env.REACT_APP_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_APP_ID,\n  measurementId: process.env.REACT_APP_MEASUREMENT_ID\n};\n\n\nconst app = initializeApp(firebaseConfig);\n\nexport const auth = getAuth(app);\nexport const db = getFirestore(app);\n\nconst google_provider = new GoogleAuthProvider();\n\n\n  \nexport const signInWithGoogle = () => {\n  signInWithPopup(auth, google_provider).then((result) => {\n    const name = result.user.displayName;\n    const email = result.user.email;\n    const profilePic = result.user.photoURL;\n    const uid = result.user.uid;\n    \n    console.log(result);\n    \n    \n\n    localStorage.setItem('name', name);\n    localStorage.setItem('email', email);\n    localStorage.setItem('profile_pic', profilePic);\n    localStorage.setItem('uid', uid);\n\n  }).catch((error) => {\n    console.log(error);\n  })\n\n}\n\n\nexport const signOutWithGoogle = () => {\n  signOut(auth);\n  console.log(\"i signed out\");\n}\n\n\n","import React, { useState } from 'react';\nimport { addDoc, collection, serverTimestamp } from 'firebase/firestore';\nimport { db, auth } from '../../firebase-config';\n\nimport './MessageBar.css';\n\n\n\nconst MessageBar = () => {\n    \n    const [inputText, setInputText] = useState('');\n    \n    const getChange = (event) => {\n        setInputText(event.target.value);\n    }\n    const user = auth.currentUser;\n\n    const displayName = user.displayName;\n    const photoURL = user.photoURL;\n\n    const handleSubmit = async (event) => {\n        setInputText(inputText)\n        const collectionRef = collection(db, \"messages\");\n        const payLoad = {text: inputText,\n                       timestamp: serverTimestamp(),\n                       photoURL: photoURL,\n                       uid: localStorage.getItem('uid'),\n                       name: displayName};\n        \n        event.preventDefault();\n\n        setInputText('');\n        await addDoc(collectionRef, payLoad)\n}\n\n    \n\n    return (\n        <div className='input-container'> \n            <div className='input-field-wrapper'>\n                <input className='input-field' type='text' value={inputText} onChange={getChange} placeholder=\"What's Poppin...\"></input>\n            </div>\n            <div className='input-button-wrapper'>\n                <button className='input-button' onClick={handleSubmit}>Send</button>\n            </div>\n        </div>\n    )\n};\n\nexport default MessageBar;","import  React from 'react';\n\nimport './TextBox.css';\n\nconst TextBox = (props) => {\n    \n\n    return (\n        \n        <div className='textbox'>\n            <div className={props.position === \"right-message\" ? \"right-textbox-name\" : \"left-textbox-name\"}>{props.name}</div>\n            <div className='photo-content-container'>\n                <img className={props.position === \"right-message\" ? \"right-textbox-photo\" : \"left-textbox-photo\"} src={props.profileURL} alt=''/>\n                <div className={props.position === \"right-message\" ? \"right-container\" : \"left-container\"}>\n                    <div className={props.position === \"right-message\" ? \"right-textbox-content\" : \"left-textbox-content\"}>{props.value}</div>\n                </div>\n            </div>\n            \n        </div>\n    )\n};\n\nexport default TextBox;","import React, { useEffect, useState } from 'react'\nimport {  collection, onSnapshot, orderBy, query } from 'firebase/firestore';\nimport TextBox from './TextBox'\nimport { db } from '../../firebase-config';\nimport './Messages.css'\n\n\n\nconst Messages = () => {\n    \n    const [messages, setMessages] = useState([]);\n  \n    useEffect(() => {\n        const collectionRef = collection(db, \"messages\");\n        const q = query(collectionRef, orderBy(\"timestamp\", \"asc\"));\n\n        const unsub = onSnapshot(q, (snapshot) =>\n        setMessages(snapshot.docs.map((doc) => ({ ...doc.data(), id: doc.id})))\n        );\n\n        return unsub;\n  }, []);\n\n    return (\n        <div className='message-container'>\n            {messages.map((message) => (\n\n            \n            <div className={message.uid === localStorage.getItem('uid') ? 'right-message': 'left-message'}  key={message.id}>\n                <TextBox className=\"textbox\" value={message.text} profileURL={message.photoURL} name={message.name} position={message.uid === localStorage.getItem('uid') ? 'right-message': 'left-message'} />\n            </div>\n        ))}\n        </div>\n        \n    )\n};\n\nexport default Messages;","import  React from 'react';\nimport './SignInButton.css'\nimport { useState } from 'react';\nimport { auth, signInWithGoogle, signOutWithGoogle } from '../../firebase-config'\nimport { onAuthStateChanged } from 'firebase/auth';\nimport { FcGoogle } from 'react-icons/fc'\n\n\nimport './TextBox.css'\n\n\n\nconst SignInButton = () => {\n    const [isUserSignedIn, setIsUserSignedIn] = useState(\"\");\n  \n    onAuthStateChanged(auth, (user) => {\n        if (user) {\n            setIsUserSignedIn(\"sign out\");\n        \n        }\n\n        else {\n            setIsUserSignedIn(\"Google\");\n        \n        }\n\n    })\n\n\n    return (\n\n            \n        <button type='button' className=\"google_button\" onClick={isUserSignedIn === \"Google\" ? signInWithGoogle : signOutWithGoogle}>\n            <div id='button_content'>\n                <div id='icon'>\n                    {isUserSignedIn === \"Google\" &&\n                    <FcGoogle />\n                    }\n                </div>\n                <div id='btn_text'>\n                    {isUserSignedIn}\n                </div>\n            </div>\n                  \n        \n        </button>\n   \n        \n         \n    )\n};\n\n\nexport default SignInButton;\n\n","import React from 'react';\nimport './SideBar.css'\nimport SignInButton from './SignInButton';\n\nconst SideBar = () => {\n\n    return (\n        <div className='sidebar'>\n            <div className='sign-in-button'>\n                <SignInButton />\n            </div>\n        </div> \n\n\n    )\n\n}\n\n\nexport default SideBar;","import React from 'react'\nimport { useState } from 'react';\nimport MessageBar from './components/TextBox/MessageBar';\nimport Messages from './components/TextBox/Messages';\nimport SideBar from './components/TextBox/SideBar';\nimport { onAuthStateChanged } from 'firebase/auth';\nimport { auth } from './firebase-config';\nimport './App.css'\n\n\n\n\nfunction App() {\n\n  const [isAuth, setIsAuth] = useState(false);\n\n    onAuthStateChanged(auth, (user) => {\n    if (user) {\n      setIsAuth(true);\n      \n    }\n\n    else {\n      setIsAuth(false);\n    }\n  })\n\n \n  return (\n    <div className=\"App\">\n      <SideBar />\n      <div className='content-chatbar'>\n        <div className='content-wrap'>\n          <div className='header'>\n            <h1>Dark Theme Messaging</h1>\n          </div>\n          <div className='messages-container'>\n            <Messages />\n          </div>\n        </div>\n\n        <div className='send-message-container'>\n        { isAuth &&\n          <MessageBar />\n        }\n        </div>\n      </div>  \n      \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}